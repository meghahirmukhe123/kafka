package com.ProductDetails.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.ProductDetails.kafka.productDetailsProducer;
import com.ProductDetails.model.ProductDetails;
import com.ProductDetails.model.userBill;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;

@RestController
public class userBillController {

    @Autowired
    private productDetailsProducer producer;

    public userBillController(productDetailsProducer producer) {
        super();
        this.producer = producer;
    }

    @PostMapping("/getbill")
    public ResponseEntity<userBill> doLogin(@RequestBody ProductDetails details) {
        // Generate a unique productId
        String productId = UUID.randomUUID().toString();

        // Calculate priceWithGST and totalBill
        double priceWithGST = details.getPrice() * (details.getGst() / 100);
        double totalBill = details.getPrice() + priceWithGST;

        // Set the calculated values and productId in the ProductDetails object
        details.setProductId(productId);
        details.setPriceWithGST(priceWithGST);
        details.setTotalBillRs(totalBill + " Rs");

        // Create a response with the same ProductDetails
        ResponseEntity<userBill> response = ResponseEntity.ok().body(new userBill("Bill generated by producer", details));

        // You can also send this data to Kafka if needed
        producer.sendMessage(response.getBody());

        return response;
    }
}
